#+TITLE: Curriculum vitae
#+AUTHOR: Tim Jäger

:PROPERTIES:
:CUSTOM_ID: curriculum-vitae
:END:

Tim Jäger, software engineer

* Skills
:PROPERTIES:
:CUSTOM_ID: skills
:END:

** Programming languages
:PROPERTIES:
:CUSTOM_ID: programming-languages
:END:

- /Expert/: Haskell, Clojure, SQL
- /Intermediate/: Java, Python, Elixir, F#, OCaml, Bash, Nix
- /Beginner/: C, Rust, JavaScript

** Databases
:PROPERTIES:
:CUSTOM_ID: databases
:END:

- /Expert/: PostgreSQL, Datomic
- /Intermediate/: Google Spanner, SQLite
- /Beginner/: ElasticSearch, MySQL

** Tools
:PROPERTIES:
:CUSTOM_ID: tools
:END:

Git (expert), Docker (intermediate), Kubernetes (intermediate),
PostgreSQL (expert), Bazel (intermediate), Emacs (intermediate)

** Services
:PROPERTIES:
:CUSTOM_ID: services
:END:

AWS, GCP, Datadog, Stripe, BuildKite, Heroku

** Interests
:PROPERTIES:
:CUSTOM_ID: interests
:END:

Compilers, type theory, functional programming, databases

** Spoken languages
:PROPERTIES:
:CUSTOM_ID: spoken-languages
:END:

English (native), German (native), French (conversational), Italian
(basic), Mandarin (basic)

* Experience
:PROPERTIES:
:CUSTOM_ID: experience
:END:

** *Google* 2020-01 to now
** *Scontrino* 2019-08 to 2020-01
:PROPERTIES:
:CUSTOM_ID: scontrino-2019-08-to-2020-01
:END:

/Palo Alto, CA/

Stealh-mode startup building dining payment technology

- solo founder
- built payment app and backend
- conducted user research & sales conversations
- pitched to investors
- technologies used: Clojure, Datomic, PostgreSQL, ClojureScript,
  Re-frame, React Native, NFC, RFID, Google Cloud

** *Brex* 2018-06 to 2019-08
:PROPERTIES:
:CUSTOM_ID: brex-2018-06-to-2019-08
:END:

/San Francisco, CA/

Credit card transaction processing software.

- TL of the credit card transaction processing team
- re-designed and implemented transactional accounting system used to
  track flows of money as payments move through the payment cycle
- database administration to ensure continued performance
- recruiting outreach, interviewed candidates & mentored new hires
- infrastructure monitoring & on-call rotation
- technologies used: Elixir, PostgreSQL, Kubernetes, Docker, Stripe,
  Git, BuildKite

** *Ladder Life* 2017-05 to 2018-06
:PROPERTIES:
:CUSTOM_ID: ladder-life-2017-05-to-2018-06
:END:

/Palo Alto, CA/

Life insurance broker full-stack software development.

- developed features in close collaboration with design, product and CX
  departments to enable automatic life insurance underwriting.
- built voice-controlled flow for Google Assistant and Amazon Alexa
  devices to get life insurance quotes
- designed, implemeted and maintained customer ETL pipeline to enable
  quick outreach
- infrastructure monitoring & on-call rotation
- lots of internal tooling
- interviewed candidates
- technologies used: Clojure, ClojureScript, Datomic, Om/next, Google
  BigQuery, Dialogflow, Datadog, AWS, Kubernetes, Docker, Stripe, Buck,
  Git, BuildKite

** *Stylefruits* 2016-07 - 2017-04
:PROPERTIES:
:CUSTOM_ID: stylefruits-2016-07---2017-04
:END:

/Munich, Germany/

Mobile app centered around fashion.

- backend feature development for fashion shopping app in collaboration
  with frontend and product department
- developed internal tooling for configuration synthesis
- built recommender system for fashion item combinations using Word2Vec
- technologies used: Clojure, PostgresSQL, Apache Mesos, ElasticSearch,
  Word2Vec, Git, Docker

** *Instana* 2015-05 to 2016-04
:PROPERTIES:
:CUSTOM_ID: instana-2015-05-to-2016-04
:END:

/Munich, Germany/

- developed cloud resource metrics exporter for infrastructure
  monitoring startup
- technologies used: Haskell, AWS CloudWatch, Git

* Education
:PROPERTIES:
:CUSTOM_ID: education
:END:

** *B.Sc. in Mechanical Engineering* 2013-03 to 2016-06
:PROPERTIES:
:CUSTOM_ID: b.sc.-in-mechanical-engineering-2013-03-to-2016-06
:END:

/Munich University of Applied Sciences/

Specialized in Automatic Control Systems

* Projects & Contributions
:PROPERTIES:
:CUSTOM_ID: projects-contributions
:END:

** =github.com/jgertm/lang=
:PROPERTIES:
:CUSTOM_ID: github.comjgertmlang
:END:

Statically-typed functional programming language targeting the JVM. As
rigourous as Haskell, as ergonomic as Clojure.

Compiler first written in Haskell, then re-written in Clojure.

** =github.com/jgertm/nrw=
:PROPERTIES:
:CUSTOM_ID: github.comjgertmnrw
:END:

CLI utility to quickly search and select from streams of text. Written
in Haskell.

** =github.com/jgertm/rules_clojure=
:PROPERTIES:
:CUSTOM_ID: github.comjgertmrules_clojure
:END:

Bazel/Blaze toolchain for compiling Clojure projects. Written in
Starlark.

** =github.com/syl20bnr/spacemacs=
:PROPERTIES:
:CUSTOM_ID: github.comsyl20bnrspacemacs
:END:

Batteries-included Emacs configuration. Written in Emacs Lisp.

** =github.com/NixOS/nixpkgs=
:PROPERTIES:
:CUSTOM_ID: github.comnixosnixpkgs
:END:

Linux distribution that is completely determined through a single
configuration file. Written in the Nix language.
